#!/usr/bin/env node
/**
 * Modified from https://github.com/mochajs/mocha
 *
 * This tiny wrapper file checks for known node flags and appends them
 * when found, before invoking the "real" _tman(1) executable.
 */
'use strict'

const path = require('path')
const spawn = require('child_process').spawn
const getOptions = require('./options')
const args = [path.join(__dirname, '_tman')]

// Load tman.opts into process.argv
// Must be loaded here to handle node-specific options
getOptions()

process.argv.slice(2).forEach((arg) => {
  let flag = arg.split('=')[0]

  switch (flag) {
    case '-d':
      args.unshift('--debug')
      args.push('--no-timeout')
      break
    case 'debug':
    case '--debug':
    case '--debug-brk':
      args.unshift(arg)
      args.push('--no-timeout')
      break
    case '--inspect':
    case '--inspect-brk':
      args.unshift(arg)
      args.push('--no-timeout')
      break
    case '-gc':
    case '--expose-gc':
      args.unshift('--expose-gc')
      break
    case '--gc-global':
    case '--es_staging':
    case '--no-deprecation':
    case '--prof':
    case '--log-timer-events':
    case '--throw-deprecation':
    case '--trace-deprecation':
    case '--use_strict':
    case '--allow-natives-syntax':
    case '--perf-basic-prof':
      args.unshift(arg)
      break
    default:
      if (arg.indexOf('--harmony') === 0) args.unshift(arg)
      else if (arg.indexOf('--trace') === 0) args.unshift(arg)
      else if (arg.indexOf('--icu-data-dir') === 0) args.unshift(arg)
      else if (arg.indexOf('--max-old-space-size') === 0) args.unshift(arg)
      else if (arg.indexOf('--preserve-symlinks') === 0) args.unshift(arg)
      else args.push(arg)
      break
  }
})

const proc = spawn(process.execPath, args, {stdio: 'inherit'})
// listen children exit
proc.once('exit', handleExit)
process.once('exit', handleExit)
function handleExit (code, signal) {
  if (signal) process.kill(process.pid, signal)
  else process.exit(code)
}
// terminate children.
process.once('SIGINT', () => {
  // force to exit in 3.1 seconds.
  setTimeout(() => process.exit(1), 3100)
})
